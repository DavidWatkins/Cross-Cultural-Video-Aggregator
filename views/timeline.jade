extends layout

block content
	div(id='slideoptions').Hidden
		ul
			li.active.starttab Video Differences
			li Clip Info
			li Others
	div(id='timelineCont').Hidden
		div(id='timeline')
	div.modal.fade.video-modal(tabindex='-1', role='dialog', aria-labelledby='videoModal' aria-hidden='true')
		div.modal-dialog.modal-lg
			div.modal-content
				div.modal-header
					button(type='button', data-dismiss='modal', aria-label='Close').close
						span(aria-hidden='true') &times;
					h4.modal-title Title
				div.modal-body
					video.videoContent(controls='true', width='100%', title='', autoplay)
						source(src='', type='video/mp4')
	script.
		$(document).on('DOMContentLoaded', function() {
			var self = this,
				flags;

			// create timeline
			createStoryJS({
				type:	   'timeline',
				width:	  '100%',
				height:	 '800',
				source:	 '../../../timelinedata/#{event}/#{date}/#{countries}',
				embed_id:   'timeline',
				start_zoom_adjust: '3',
				start_at_slide: '#{slide}'
			});

			// initialize changes to timeline
			var count = 0;
			$('#timeline').on('DOMSubtreeModified', function() {
				count++;
				// the basic elements have loaded, can update them
				if (count == 80) {
					// rearrange so nav is on top, black link bar in middle
					$('.vco-container').prepend($('#slideoptions'));
					$('.vco-container').prepend($('.vco-navigation'));
					$('#slideoptions').removeClass('Hidden');
					$('#timelineCont').removeClass('Hidden');
					// add style sheet for overriding timeline
					$('head').append('<link rel="stylesheet" type="text/css" href="../../../css/timeline.css">');
					// if there is an update to slider items, update them
					$('.slider-item').on('DOMSubtreeModified', self.update);
				}
				// all of the flags have loaded, can update them
				var temp = count;
				setTimeout(function() {
					if (temp == count) {
						self.setFlags(true);
					}
				}, 300);
			});

			// deal with flag styling problems with zoom in or out
			$('#timeline').click(function(e) {
				if($(e.target).parent().hasClass('vco-toolbar') || $(e.target).parent().hasClass('zoom-out') || $(e.target).parent().hasClass('zoom-in')) {
					$('.flag').addClass('Hidden');
					setTimeout( function() {
						self.setFlags(false);
						$('.flag').removeClass('Hidden');
					}, 1000);
				}
			});

			// updates the slider items
			this.update = function() {
				var tags = $('.tags h5'),
					i,
					j;
				$('.vco-storyjs .vco-feature h3').remove();
				$('.videoTrigger').off();
				$('.videoTrigger').click(function(e) {
					$('.modal-title').html($(e.currentTarget).attr('video-type'));
					$('.videoContent source').attr('src', '../../../videos/' + $(e.currentTarget).attr('video-src') + $(e.currentTarget).attr('video-period'));
					$('.videoContent').load();
					$('.videoContent').removeClass('Hidden');
				});
				for (i=0; i<tags.length; i++) {
					var tag = $(tags[i]),
						isOverflowing = tag.prop('clientHeight') < tag.prop('scrollHeight');
					if (isOverflowing) {
						tag.off();
						tag.html(tag.html());
						tag.css('cursor', 'pointer');
						tag.css('color', '#428bca');
						tag.click(function(e) {
							var label;
							// figure out which label to also update
							temptags = $(e.currentTarget).parent().parent().children('.tags');
							for (j=0; j<temptags.length; j++) {
								if ($(temptags[j]).children().html() == $(e.currentTarget).html()) {
									label = $(e.currentTarget).parent().parent().parent().parent().children('.labels').children().children()[j];
								}
							}
							if ($(e.currentTarget).css('overflow') == 'hidden') {
								$(e.currentTarget).css('height', 'auto');
								$(e.currentTarget).css('overflow', 'visible');
								$(label).css('height', $(e.currentTarget).parent().css('height'));
							} else {
								$(e.currentTarget).css('height', '36px');
								$(e.currentTarget).css('overflow', 'hidden');
								$(label).css('height', $(e.currentTarget).parent().css('height'));
							}
						});
					}
				}
			}

			// ends video when modal is closed
			$('.modal').on('hidden.bs.modal', function(e) {
				$('.videoContent').get(0).pause();
				$('.videoContent').addClass('Hidden');
			});

			// restyles the flags on navigation bar
			this.setFlags = function(init) {
				var flags = $('.flag'),
					top;
				for (i = 0; i < flags.length; i++) {
					top = $(flags[i]).css('top');
					if (top == '50px' || top == '5px') {
						$(flags[i]).css('top', '5px');
						if (init) {
							$(flags[i]).css('height', '140px');
							$(flags[i]).css('width', '220px')
							$(flags[i]).children().css('height', '138px');
							$($(flags[i]).children().children()[0]).css('height', '140px');
							$($(flags[i]).children().children()[0]).css('position', 'absolute');
							$($(flags[i]).children().children()[0]).css('z-index', '0');
							$($(flags[i]).children().children()[0]).css('width', '220px');
							$(flags[i]).children().children().children().css('height', '140px');
							$(flags[i]).children().children().children().css('width', '220px');
							$($(flags[i]).children().children()[1]).css('height', '20px');
							$($(flags[i]).children().children()[1]).css('color', '#000');
							$($(flags[i]).children().children()[1]).css('background-color', '#fff');
							$($(flags[i]).children().children()[1]).css('margin-top', '115px'); 
							$($(flags[i]).children().children()[1]).css('font-size', '12px');
							$($(flags[i]).children().children()[1]).css('padding', '2px 10px 0px 10px');
							$($(flags[i]).children().children()[1]).css('position', 'relative');
							$($(flags[i]).children().children()[1]).css('z-index', '1');
							$($(flags[i]).children().children()[1]).css('line-height', '150%');
							$($(flags[i]).children().children()[1]).css('opacity', '.8');
							$($(flags[i]).children().children()[1]).css('overflow', 'hidden');
						}
					} else if (top == '100px' || top == '70px') {
						$(flags[i]).css('top', '70px');
					}
					if (top == '1px' || top == '100px' && init) {
						$($(flags[i]).children().children()[0]).css('z-index', '0');
						$($(flags[i]).children().children()[0]).css('position', 'absolute');
						$($(flags[i]).children().children()[1]).css('height', '20px');
						$($(flags[i]).children().children()[1]).css('color', '#000');
						$($(flags[i]).children().children()[1]).css('background-color', '#fff');
						$($(flags[i]).children().children()[1]).css('margin-top', '60px'); 
						$($(flags[i]).children().children()[1]).css('font-size', '11px');
						$($(flags[i]).children().children()[1]).css('padding', '0px 10px 0px 10px');
						$($(flags[i]).children().children()[1]).css('position', 'relative');
						$($(flags[i]).children().children()[1]).css('z-index', '1');
						$($(flags[i]).children().children()[1]).css('line-height', '150%');
						$($(flags[i]).children().children()[1]).css('opacity', '.8');
						$($(flags[i]).children().children()[1]).css('overflow', 'hidden');
					}
				}
			}

			// handle the options bar navigation
			$('#slideoptions ul li').click(function(e) {
				var prevActive = self.getTabName($('#slideoptions ul li.active').html()),
					newActive =  self.getTabName($(e.currentTarget).html());
				if (prevActive != newActive) {
					$('#slideoptions ul li.active').removeClass('active');
					$(e.currentTarget).addClass('active');
					 $('.row.' + prevActive).addClass('NoDisplay');
					 $('.row.' + newActive).removeClass('NoDisplay');
				}	
			});

			this.getTabName = function(name) {
				if (name == 'Video Differences') {
					return 'videoDifferences';
				} else if (name == 'Clip Info') {
					return 'clipInfo';
				} else {
					return 'others';
				}
			}

		});